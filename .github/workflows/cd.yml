# Simple workflow for deploying static content to GitHub Pages
name: Build, Test, npm Publish, and Deploy

on: [push, pull_request]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent pipeline to run
concurrency:
  group: "default-pipeline"
  cancel-in-progress: true

jobs:
  # Test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - name: Install dependencies
        run: npx pnpm install
      - name: Run tests
        run: pnpm run test

#  npm-publish:
#    runs-on: ubuntu-latest
#    needs: test
#    if: github.ref == 'refs/heads/main'
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: "16"
#          cache: pnpm
#      - run: npx pnpm install
#      - name: Build
#        run: pnpm run build
#      - name: Publish
#        uses: mikeal/merge-release@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  # Build the site for embed view and other demo
  build-site:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/push-to-zenuml-editor-embed'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: npm
      - name: Install dependencies
        run: npx pnpm install
      - name: Build the site for demo page and embed view
        run: pnpm run build
      - name: Upload artifact for pages # upload zipped artifact named 'gh-pages' for actions/deploy-pages@v1
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./dist
      - name: Upload artifact for embed view # upload unzipped artifact named 'zenuml-editor-embed' for cpina/github-action-push-to-another-repository@main
        uses: actions/upload-artifact@v3
        with:
          name: zenuml-editor-embed
          path: ./dist
  # Single deploy job since we're just deploying
  publish-to-gh-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-site
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  push-to-zenuml-editor-embed:
    environment:
      name: github-pages  # use the same environment as publish-to-gh-pages on purpose
      url: https://github.com/ZenUml/zenuml-editor-embed
    runs-on: ubuntu-latest
    needs: build-site
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: zenuml-editor-embed
          path: ./dist
      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: './dist'
          destination-github-username: 'zenuml'
          destination-repository-name: 'zenuml-editor-embed'
          user-email: github.bot@zenuml.com
          target-branch: main

#  cypress-run:
#    runs-on: macos-latest
#    needs: test
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: Setup Node
#        uses: actions/setup-node@v3
#        with:
#          node-version: "14"
#          cache: yarn
#      - name: Cypress run
#        uses: cypress-io/github-action@v2
#        with:
#          start: yarn start
#          wait-on: 'http://localhost:8080'
#          wait-on-timeout: 110
#      - name: Upload artifacts  # Find artifacts under actions/jobs
#        if: always()
#        uses: actions/upload-artifact@v2
#        with:
#          name: snapshots
#          path: ./cypress/
